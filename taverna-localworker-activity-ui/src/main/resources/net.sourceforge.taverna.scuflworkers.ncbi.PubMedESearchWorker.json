{
  "classLoaderSharing" : "workflow",
  "script" : "if ((term == void) || (term == null) || term.equals(\"\")) {\n\tthrow new RunTimeException(\"port term must have a non-empty value\");\n}\n\nURL url = new URL (\"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed\" +\n(field == void ? \"\" : (\"&field=\" + field)) +\n(retstart == void ? \"\" : (\"&retstart=\" + retstart)) +\n(retmax == void ? \"\" : (\"&retmax=\" + retmax)) +\n(mindate == void ? \"\" : (\"&mindate=\" + mindate)) +\n(maxdate == void ? \"\" : (\"&maxdate=\" + maxdate)) +\n\"&rettype=\" + (rettype == void ? \"full\" : rettype) +\n\"&retmode=\" + (retmode == void ? \"xml\" : retmode) +\n\"&tool=taverna\" +\n\"&term=\" + term);\n\nBufferedReader reader = new BufferedReader (new InputStreamReader(url.openStream()));\nStringWriter writer = new StringWriter();\n\nchar[] buffer = new char[1024];\n    while (true) {\n        int r = reader.read(buffer);\n        if (r <= 0) {\n            break;\n        }\n        writer.write(buffer, 0, r);\n    }\nreader.close();\noutputText = writer.toString();\n",
  "localworkerName" : "net.sourceforge.taverna.scuflworkers.ncbi.PubMedESearchWorker",
  "inputPorts" : [ {
    "name" : "term",
    "depth" : 0,
    "type" : "String"
  }, {
    "name" : "db",
    "depth" : 0,
    "type" : "String"
  }, {
    "name" : "field",
    "depth" : 0,
    "type" : "String"
  }, {
    "name" : "retstart",
    "depth" : 0,
    "type" : "String"
  }, {
    "name" : "retmax",
    "depth" : 0,
    "type" : "String"
  }, {
    "name" : "mindate",
    "depth" : 0,
    "type" : "String"
  }, {
    "name" : "maxdate",
    "depth" : 0,
    "type" : "String"
  }, {
    "name" : "rettype",
    "depth" : 0,
    "type" : "String"
  } ],
  "outputPorts" : [ {
    "name" : "outputText",
    "depth" : 0,
    "granularDepth" : 0
  } ],
  "isAltered" : false
}